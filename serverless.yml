service: serverless-aigisbot

provider:
    stage: prod
    name: aws
    # The AWS region in which to deploy (us-east-1 is the default)
    region: us-east-1
    # Environment variables
    environment:
        APP_ENV: production # Or use ${sls:stage} if you want the environment to match the stage
        QUEUE_CONNECTION: sqs
        SQS_QUEUE: ${construct:jobs.queueUrl}
        APP_NAME: "Aigisbot"
        APP_KEY: ${ssm:/aigisbot/prod/APP_KEY}
        APP_DEBUG: ${ssm:/aigisbot/prod/APP_DEBUG}
        APP_URL: ${ssm:/aigisbot/prod/APP_URL}
        LOG_CHANNEL: ${ssm:/aigisbot/prod/LOG_CHANNEL}
        LOG_DEPRECATIONS_CHANNEL: ${ssm:/aigisbot/prod/LOG_DEPRECATIONS_CHANNEL}
        LOG_LEVEL: ${ssm:/aigisbot/prod/LOG_LEVEL}
        DB_CONNECTION: ${ssm:/aigisbot/prod/DB_CONNECTION}
        DB_HOST: ${ssm:/aigisbot/prod/DB_HOST}
        DB_PORT: ${ssm:/aigisbot/prod/DB_PORT}
        DB_DATABASE: ${ssm:/aigisbot/prod/DB_DATABASE}
        DB_USERNAME: ${ssm:/aigisbot/prod/DB_USERNAME}
        DB_PASSWORD: ${ssm:/aigisbot/prod/DB_PASSWORD}
        BROADCAST_DRIVER: ${ssm:/aigisbot/prod/BROADCAST_DRIVER}
        CACHE_DRIVER: ${ssm:/aigisbot/prod/CACHE_DRIVER}
        FILESYSTEM_DISK: ${ssm:/aigisbot/prod/FILESYSTEM_DISK}
        SESSION_DRIVER: ${ssm:/aigisbot/prod/SESSION_DRIVER}
        SESSION_LIFETIME: ${ssm:/aigisbot/prod/SESSION_LIFETIME}
        MEMCACHED_HOST: ${ssm:/aigisbot/prod/MEMCACHED_HOST}
        REDIS_HOST: ${ssm:/aigisbot/prod/REDIS_HOST}
        REDIS_PASSWORD: ${ssm:/aigisbot/prod/REDIS_PASSWORD}
        REDIS_PORT: ${ssm:/aigisbot/prod/REDIS_PORT}
        MAIL_MAILER: ${ssm:/aigisbot/prod/MAIL_MAILER}
        MAIL_HOST: ${ssm:/aigisbot/prod/MAIL_HOST}
        MAIL_PORT: ${ssm:/aigisbot/prod/MAIL_PORT}
        MAIL_USERNAME: ${ssm:/aigisbot/prod/MAIL_USERNAME}
        MAIL_PASSWORD: ${ssm:/aigisbot/prod/MAIL_PASSWORD}
        MAIL_ENCRYPTION: ${ssm:/aigisbot/prod/MAIL_ENCRYPTION}
        MAIL_FROM_ADDRESS: ${ssm:/aigisbot/prod/MAIL_FROM_ADDRESS}
        MAIL_FROM_NAME: ${ssm:/aigisbot/prod/MAIL_FROM_NAME}
        # AWS_ACCESS_KEY_ID: ${ssm:/aigisbot/prod/AWS_ACCESS_KEY_ID}
        # AWS_SECRET_ACCESS_KEY: ${ssm:/aigisbot/prod/AWS_SECRET_ACCESS_KEY}
        # AWS_DEFAULT_REGION: ${ssm:/aigisbot/prod/AWS_DEFAULT_REGION}
        AWS_BUCKET: 
          Ref: MyS3Bucket
        AWS_USE_PATH_STYLE_ENDPOINT: ${ssm:/aigisbot/prod/AWS_USE_PATH_STYLE_ENDPOINT}
        # PUSHER_APP_ID: ${ssm:/aigisbot/prod/PUSHER_APP_ID}
        # PUSHER_APP_KEY: ${ssm:/aigisbot/prod/PUSHER_APP_KEY}
        # PUSHER_APP_SECRET: ${ssm:/aigisbot/prod/PUSHER_APP_SECRET}
        # PUSHER_HOST: ${ssm:/aigisbot/prod/PUSHER_HOST}
        PUSHER_PORT: ${ssm:/aigisbot/prod/PUSHER_PORT}
        PUSHER_SCHEME: ${ssm:/aigisbot/prod/PUSHER_SCHEME}
        PUSHER_APP_CLUSTER: ${ssm:/aigisbot/prod/PUSHER_APP_CLUSTER}
        VITE_APP_NAME: ${ssm:/aigisbot/prod/VITE_APP_NAME}
        VITE_PUSHER_APP_KEY: ${ssm:/aigisbot/prod/VITE_PUSHER_APP_KEY}
        VITE_PUSHER_HOST: ${ssm:/aigisbot/prod/VITE_PUSHER_HOST}
        VITE_PUSHER_PORT: ${ssm:/aigisbot/prod/VITE_PUSHER_PORT}
        VITE_PUSHER_SCHEME: ${ssm:/aigisbot/prod/VITE_PUSHER_SCHEME}
        VITE_PUSHER_APP_CLUSTER: ${ssm:/aigisbot/prod/VITE_PUSHER_APP_CLUSTER}
        DISCORD_TOKEN: ${ssm:/aigisbot/prod/DISCORD_TOKEN}
        DISCORD_PUBLIC_KEY: ${ssm:/aigisbot/prod/DISCORD_PUBLIC_KEY}
        # GOOGLE_AUTH: ${ssm:/aigisbot/prod/GOOGLE_AUTH}
        ID_FOLDER_GBA: ${ssm:/aigisbot/prod/ID_FOLDER_GBA}
        ID_FOLDER_GBC: ${ssm:/aigisbot/prod/ID_FOLDER_GBC}
        ID_FOLDER_GB: ${ssm:/aigisbot/prod/ID_FOLDER_GB}
        ID_FOLDER_NES: ${ssm:/aigisbot/prod/ID_FOLDER_NES}
        ID_FOLDER_SNES: ${ssm:/aigisbot/prod/ID_FOLDER_SNES}
        ID_FOLDER_64: ${ssm:/aigisbot/prod/ID_FOLDER_64}
        ID_FOLDER_GAMECUBE: ${ssm:/aigisbot/prod/ID_FOLDER_GAMECUBE}
        ID_FOLDER_DS: ${ssm:/aigisbot/prod/ID_FOLDER_DS}
        ID_FOLDER_PSX: ${ssm:/aigisbot/prod/ID_FOLDER_PSX}
        ID_FOLDER_PS2: ${ssm:/aigisbot/prod/ID_FOLDER_PS2}
        ID_FOLDER_PSP: ${ssm:/aigisbot/prod/ID_FOLDER_PSP}
        ID_FOLDER_3DS: ${ssm:/aigisbot/prod/ID_FOLDER_3DS}
        ID_FOLDER_DREAMCAST: ${ssm:/aigisbot/prod/ID_FOLDER_DREAMCAST}
        ID_FOLDER_WII: ${ssm:/aigisbot/prod/ID_FOLDER_WII}
        ID_FOLDER_SWITCH: ${ssm:/aigisbot/prod/ID_FOLDER_SWITCH}
        ID_FOLDER_GENESIS: ${ssm:/aigisbot/prod/ID_FOLDER_GENESIS}
        SAGIRI_TOKEN: ${ssm:/aigisbot/prod/SAGIRI_TOKEN}
        ASSET_URL: ${ssm:/aigisbot/prod/ASSET_URL}
        SECRET_NAME: ${ssm:/aigisbot/prod/SECRET_NAME}
        OWNER: ${ssm:/aigisbot/prod/OWNER}
        REPO_NAME: ${ssm:/aigisbot/prod/REPO_NAME}


    iamRoleStatements:
                - Effect: Allow
                  Action:
                    - s3:*
                  Resource: 
                    - "arn:aws:s3:::aigisbot-images/*"
package:
    # Files and directories to exclude from deployment
    patterns:
        - '!node_modules/**'
        - '!public/storage'
        - '!resources/assets/**'
        - '!storage/**'
        - '!tests/**'



functions:

    # This function runs the Laravel website/API
    web:
        handler: public/index.php
        runtime: php-81-fpm
        timeout: 28 # in seconds (API Gateway has a timeout of 29 seconds)
        events:
            - httpApi:
                method: '*'
                path: /
        

    # This function lets us run artisan commands in Lambda
    artisan:
        handler: artisan
        runtime: php-81-console
        timeout: 720 # in seconds
        # Uncomment to also run the scheduler every minute
        #events:
        #    - schedule:
        #          rate: rate(1 minute)
        #          input: '"schedule:run"'
        

plugins:
    # We need to include the Bref plugin
    - ./vendor/bref/bref
    - serverless-lift
    # - serverless-domain-manager

constructs:
    website:
        type: server-side-website
        assets:
            '/js/*': public/js
            '/css/*': public/css
            '/favicon.ico': public/favicon.ico
            '/robots.txt': public/robots.txt
            '/vendor/telescope/*': public/vendor/telescope


    jobs:
        type: queue
        worker:
            handler: Bref\LaravelBridge\Queue\QueueHandler
            runtime: php-81
            timeout: 60 # seconds


resources:
  Resources:
    MyApiGateway:
        Type: AWS::ApiGatewayV2::Api
        Properties:
          Name: my-api
          ProtocolType: HTTP
          CorsConfiguration:
            AllowHeaders:
              - '*'
            AllowMethods:
              - '*'
            AllowOrigins:
              - 'http://roms.aigisbot.xyz'
              - 'https://d32n8agm3v8nrq.cloudfront.net'
              
    MyS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: aigisbot-images
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - "*"
              AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
                - HEAD
              AllowedOrigins:
                - "http://127.0.0.1:8000"
                - "https://pt69uke176.execute-api.us-east-1.amazonaws.com"
                - "https://d32n8agm3v8nrq.cloudfront.net"
                - "https://roms.aigisbot.xyz"



# custom:
#   customDomain:
#     apiType: rest
#     domainName: roms.aigisbot.xyz
#     basePath: ''
#     stage: ${self:provider.stage}
